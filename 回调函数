#include <stdio.h>
#include <stdlib.h>

int compare(int a, int b)  // 用于bubbleSort()的回调函数
{
    return a-b;
    //return b-a;
}

int cmp(const void* a, const void* b) // 用于库函数qsort()
{
    return (*((int*)a) - *((int*)b));
    //return (*((int*)b) - *((int*)a));
}

void bubbleSort(int arr[], int n, int (*compare)(int,int)) 
{ // 只需更改函数指针指向的回调函数，即可实现升序或降序排列
    for(int i=0; i<n; i++)
        for(int j=0;j<n-i-1; j++)
            if(compare(arr[j],arr[j+1])>0)
            {
                int tmp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = tmp;
            }
}

void arrOutput(int arr[], int n)
{
    for(int i=0;i<n; i++)
        printf("%d ",arr[i]);
    printf("\n");
}
int main()
{
    int arr[] = {3,2,1,5,4};
    int n = sizeof(arr)/sizeof(arr[0]);
    bubbleSort(arr,n,compare);
    arrOutput(arr,n);

    int arr2[] = {3,2,1,5,4};
    qsort(arr2,n,sizeof(int),cmp);
    arrOutput(arr2,n);
    while(1);
    return 0;
}
/*
1 2 3 4 5
1 2 3 4 5
*/
